	plugins {
		id 'java'
		id 'org.springframework.boot' version '3.4.3'
		id 'io.spring.dependency-management' version '1.1.7'
	}

	group = 'com.example'
	version = '0.0.1-SNAPSHOT'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	repositories {
		mavenCentral()
	}

	dependencies {
		implementation 'org.apache.commons:commons-lang3:3.12.0'
		implementation 'org.springframework.boot:spring-boot-starter-web'
		implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
		implementation("mysql:mysql-connector-java:8.0.33")
		implementation 'org.springframework.boot:spring-boot-starter-security' // 시큐리티
		implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'// 타임리프
		compileOnly 'org.projectlombok:lombok'
		developmentOnly 'org.springframework.boot:spring-boot-devtools'
		runtimeOnly 'com.mysql:mysql-connector-j'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'com.jayway.jsonpath:json-path'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		testImplementation 'org.mockito:mockito-core'

		//웹토큰
		implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
		runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
		runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5' // or jjwt-gson



	}

	tasks.named('test') {
		useJUnitPlatform()
	}


	tasks.withType(JavaCompile) {
		options.compilerArgs << "-parameters" // 반드시 필요 (RequestParam 이름 자동 인식)
	}